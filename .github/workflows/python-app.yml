name: Python (Django) application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        # pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with pylint
      run: |
        # stop the build if there are Python syntax errors or undefined names
        pylint . --exit-zero --disable=C,F *.py
    - name: Run unit-tests
      env:
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        POSTGRESQL_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD}}
      run: |
        python ./manage.py makemigrations
        python ./manage.py migrate
        python ./manage.py test
    - name: Deploy to Heroku
      env:
        HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      if: github.ref == 'refs/heads/main' && job.status == 'success'
      run: |        
        git remote add heroku https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git
        heroku config:set DEBUG_COLLECTSTATIC=1 -a $HEROKU_APP_NAME
        git push heroku HEAD:main -f
